package br.senai.sp.livraria.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.senai.sp.livraria.model.entity.ItemPedido;
import br.senai.sp.livraria.service.ItemPedidoService;

@RestController
@RequestMapping("/itemPedido")
public class ItemPedidoController {
	
    @Autowired
    private ItemPedidoService itemPedidoService;

    @PostMapping
    public ResponseEntity<ItemPedido> criar(@RequestBody ItemPedido itemPedido) {
        ItemPedido itemPedidoSalvo = itemPedidoService.salvar(itemPedido);
        return ResponseEntity.status(HttpStatus.CREATED).body(itemPedidoSalvo);
    }

    @GetMapping("")
    public ResponseEntity<List<ItemPedido>> listarTodos() {
        List<ItemPedido> itemPedidos = itemPedidoService.listarTodos();
        return ResponseEntity.ok(itemPedidos);
    }

    @GetMapping("/{id}")
    public ResponseEntity<ItemPedido> buscarPorId(@PathVariable Long id) {
        ItemPedido itemPedido = itemPedidoService.buscarPorId(id);
        return ResponseEntity.ok(itemPedido);
    }

    @PutMapping("/{id}")
    public ResponseEntity<ItemPedido> atualizar(@PathVariable Long id, @RequestBody ItemPedido itemPedidoAtualizado) {
        ItemPedido itemPedido = itemPedidoService.buscarPorId(id);
        itemPedido.setDetalheLivro(itemPedidoAtualizado.getDetalheLivro());
        itemPedido.setPedido(itemPedidoAtualizado.getPedido());
        itemPedido.setQtdeItens(itemPedidoAtualizado.getQtdeItens());
        itemPedido.setValorUnid(itemPedidoAtualizado.getValorUnid());
        itemPedido.setValorTotal(itemPedidoAtualizado.getValorTotal());
        ItemPedido itemPedidoAtualizadoSalvo = itemPedidoService.salvar(itemPedido);
        return ResponseEntity.ok(itemPedidoAtualizadoSalvo);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> excluir(@PathVariable Long id) {
        itemPedidoService.excluir(id);
        return ResponseEntity.noContent().build();
    }
}
